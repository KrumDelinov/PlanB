@using PlanB.Web.ViewModels.Employee.Tanks
@model TanksListViewModel
@{
    var test = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Tanks);
}

<!-- Earnings (Monthly) Card Example -->
@*<div class="col-xl-3 col-md-6 mb-4">
    <div class="card border-left-primary shadow h-100 py-2">
    <div class="card-body">
    <div class="row no-gutters align-items-center">
    <div class="col mr-2">
    <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">Earnings (Monthly)</div>
    <div class="h5 mb-0 font-weight-bold text-gray-800">$40,000</div>
    </div>
    <div class="col-auto">
    <i class="fas fa-calendar fa-2x text-gray-300"></i>
    </div>
    </div>
    </div>
    </div>
    </div>*@

<!-- Earnings (Monthly) Card Example -->
@foreach (var tank in Model.Tanks)
{
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-success shadow h-100 py-2">
            <div class="card-body">

                <div class="row-cols-2">
                    
                    <div class="col" id=@tank.Name>
                       
                    </div>

                    <div class="col">
                        <i class="fas fa-calendar fa-2x text-gray-300"></i>
                        <a asp-area="Manager" asp-controller="Tanks" asp-action="FillTank" asp-route-id="@tank.Id">Fill Tank</a>
                       
                    </div>
                </div>
                
            </div>
        </div>
    </div>
}
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">
    google.charts.load('current', {'packages':['gauge']});
    google.charts.setOnLoadCallback(drawChart);



    function drawChart() {

     var weekDayArray = @Html.Raw(Json.Serialize(Model.Tanks));
     // var arr = JSON.parse('@Html.Raw(Json.Serialize(@Model.Tanks))');
      //var something = JSON.parse('@Html.Raw(Json.Serialize(Model.Tanks))');

      weekDayArray.forEach(element => {
      console.log(element.name);
       var data = google.visualization.arrayToDataTable([
        ['Label', 'Value'],
        [element.name, element.amount]
      ]);

      var options = {
        width: 250, height: 150,
        max: 1200,
        redFrom: 750, redTo: 1200,
        yellowFrom:500, yellowTo: 750,
        minorTicks: 5
      };

        var chart = new google.visualization.Gauge(document.getElementById(element.name));
        chart.draw(data, options);


    });
    }
</script>




